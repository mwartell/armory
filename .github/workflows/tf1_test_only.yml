---
name: tf1 test only

on:
  push:
    branches:
      - master
      - private-runner

  pull_request:
    branches:
      - master

  workflow_dispatch:

env:
  DOCKER_BUILDKIT: 1

jobs:
  vm-package-purge:
    name: purge installed bloatware
    # source https://github.com/actions/virtual-environments/blob/ubuntu18/20210211.1/images/linux/Ubuntu1804-README.md
    # this purge yields ~49GB free on runner's root disk
    runs-on: ubuntu-18.04
    steps:
      - name: package purging
        run: |
          sudo apt purge \
            ghc-8.8.4 ghc-8.10.3 ghc-8.6.5 \
            azure-cli google-cloud-sdk \
            google-chrome-stable firefox \
            dotnet-sdk-5.0 dotnet-runtime-3.1 dotnet-runtime-3.0 dotnet-runtime-5.0
          sudo apt autoremove
          sudo apt clean
      - name: vaporize dotnet
        run: rm -rf /usr/share/dotnet
      - name: shed containers
        run: docker rmi node:10 node:12 ubuntu:14.04 buildpack-deps:buster
      - name: show docker
        run: docker images
      - name: disk free
        run: df -h /

  pytest-tf1:
    name: PyTest TF1
    runs-on: ubuntu-18.04
    needs: vm-package-purge
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: "3.6"
      - name: build tf1 docker containers
        run: |
          pip install -r requirements.txt
          version=$(python -m armory --version)
          bash docker/build-dev.sh tf1
          df -h /
      - name: Run armory TF1 model_builder_tf1_test
        run: |
          df -h /
          version=$(python -m armory --version)
          docker run -w /armory_dev twosixarmory/tf1:${version} python \
            /opt/conda/lib/python3.7/site-packages/object_detection/builders/model_builder_tf1_test.py
      - name: Run armory TF1 test_docker
        run: |
          df -h /
          version=$(python -m armory --version)
          docker run -w /armory_dev twosixarmory/tf1:${version} pytest -s ./tests/test_docker
      - name: Run armory TF1 test_tf1
        run: |
          df -h /
          pip install -r requirements.txt
          version=$(python -m armory --version)
          docker run -w /armory_dev twosixarmory/tf1:${version} pytest -s ./tests/test_tf1
