---
name: Mostly self-hosted

on:
  push:
    branches:
      - master
      - private-runner

  pull_request:
    branches:
      - master

  workflow_dispatch:

env:
  DOCKER_BUILDKIT: 1

jobs:
  # run the simple syntactic tests first
  # the actions/python call is not for self-hosted because we know it is ubuntu 18.04 and python 3.6

  json-format-test:
    name: JSON file format
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Ensure contributor used ("python -m tools.format_json") before commit
        run: python -m tools.format_json --check

  # can we make flake8 run if installed in block?

  flake8-test:
    name: Flake8
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Run flake8
        run: |
          pip install flake8
          flake8

  black-test:
    name: Black code format
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: install black
        run: pip install black==19.10b0
      - name: Ensure contributor used ("black ./") before commit
        run: black --check ./

  yamllint-test:
    name: Yamllint
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: install yamllint
        run: pip install yamllint
      - name: Run yamllint
        run: yamllint --no-warnings ./

  # TODO: will self-hosted parallelize any tasks?

  pytest-tf1:
    name: PyTest TF1
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Run armory TF1 docker tests
        run: |
          pip install -r requirements.txt
          version=$(python -m armory --version)
          bash docker/build-dev.sh tf1
          docker run -w /armory_dev twosixarmory/tf1:${version} pytest -s ./tests/test_docker
          docker run -w /armory_dev twosixarmory/tf1:${version} pytest -s ./tests/test_tf1
          docker run -w /armory_dev twosixarmory/tf1:${version} python \
          /opt/conda/lib/python3.7/site-packages/object_detection/builders/model_builder_tf1_test.py

  armory-tf1:
    name: Armory run tests TF1
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Run armory TF1 scenarios
        run: |
          pip install -r requirements.txt
          bash docker/build-dev.sh tf1
          python -m armory run tests/scenarios/tf1/image_classification.json

  pytest-tf2:
    name: PyTest TF2
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Run armory TF2 docker tests
        run: |
          pip install -r requirements.txt
          version=$(python -m armory --version)
          bash docker/build-dev.sh tf2
          docker run -w /armory_dev twosixarmory/tf2:${version} pytest -s ./tests/test_docker
          docker run -w /armory_dev twosixarmory/tf2:${version} pytest -s ./tests/test_tf2
          docker run -w /armory_dev twosixarmory/tf2:${version} python \
          /opt/conda/lib/python3.7/site-packages/object_detection/builders/model_builder_tf2_test.py

  pytest-pytorch:
    name: PyTest PyTorch
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Run armory PyTorch docker tests
        run: |
          pip install -r requirements.txt
          version=$(python -m armory --version)
          bash docker/build-dev.sh pytorch
          docker run -w /armory_dev twosixarmory/pytorch:${version} pytest -s ./tests/test_docker
          docker run -w /armory_dev twosixarmory/pytorch:${version} pytest -s ./tests/test_pytorch

  armory-pytorch:
    name: Armory run tests PyTorch
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Run armory Pytorch scenarios
        run: |
          pip install -r requirements.txt
          bash docker/build-dev.sh pytorch
          python -m armory run tests/scenarios/pytorch/image_classification.json

  armory-no-docker:
    name: Armory test without docker
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Run armory test without docker
        run: |
          pip install -r requirements.txt
          version=$(python -m armory --version)
          bash docker/build-dev.sh tf1
          docker run -w /armory_dev twosixarmory/tf1:${version} python -m armory \
          run --no-docker tests/scenarios/tf1/image_classification.json
          bash docker/build-dev.sh pytorch
          docker run -w /armory_dev twosixarmory/pytorch:${version} python -m armory \
          run --no-docker tests/scenarios/pytorch/image_classification.json

  # for platform and version matrix testing, use github hosted runners, they have all the platform/version
  # combinations

  pytest-host:
    name: PyTest Host
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-18.04", "windows-latest", "macos-latest"]
        python-version: ["3.6"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run armory host tests
        shell: bash
        run: |
          pip install -r requirements.txt
          pip install -r test-requirements.txt
          pytest -s ./tests/test_host/
